<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
			PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
			"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="member">
	
<!-- 
 	이 영역에 sql문에 맞는 태그를 사용하여 SQL문을 기술한다.
	
	사용할 수 있는 기본적인 태그들
	<select> ~ </select>	
	<insert> ~ </insert>	
	<update> ~ </update>	
	<delete> ~ </delete>	
	
	위 태그에서 사용되는 속성들
	
	1) id속성 : 해당 태그를 호출할 때 <sqlMap>태그의 namespace와 연결하여 사용하는
	                   이름
	
	2) parameterClass속성 : sql문에 사용될 데이터가 들어있는 객체를 지정한다.
	 (보통 VO클래스, 자바의 자료형이름 등이 사용된다.)
	 (typeAlias로 지정한 alias명을 사용할 수 있다.)
	
	3) resultClass 속성 : select문을 실행한 결과를 담을 객체를 지정한다.
					(보통 VO클래스나 자바의 자료형이름을 사용한다.)
 -->

	<insert id="insertMember" parameterClass="kr.or.ddit.member.vo.MemberVO">

	INSERT INTO MEMBER
	(
	MEM_ID
	,MEM_PASS
	,MEM_NAME
	,MEM_NICKNAME
	,MEM_GENDER
	,MEM_BIR
	,MEM_ZIP
	,MEM_ADD1
	,MEM_ADD2
	,MEM_HP
	,MEM_MAIL
	,MEM_CYBERMONEY
	)
	VALUES
	(
	#memId#
	,#memPass#
	,#memName#
	,#memNickname#
	,#memGender#
	,#memBir#
	,#memZip#
	,#memAdd1#
	,#memAdd2#
	,#memHp#
	,#memMail#
	,#memCyberMoney#
	)
	
	</insert>
	
	<update id="updateMember" parameterClass="kr.or.ddit.member.vo.MemberVO">
		
		UPDATE MEMBER
         SET 
         MEM_GENDER = #memGender#
          <isNotEmpty property="memName">
          ,MEM_NAME = #memName#
          </isNotEmpty>
          <isNotEmpty property="memNickname">
          ,MEM_NICKNAME = #memNickname#
          </isNotEmpty>
          <isNotEmpty property="atchFileId">
          ,ATCH_FILE_ID = #atchFileId#
          </isNotEmpty>
	 	WHERE MEM_ID = #memId#
	</update>
	
	<delete id="deleteMember" parameterClass="String">
		DELETE 
		FROM MEMBER
		WHERE MEM_ID = #memId#
	</delete>
	
<!-- 	<resultMap class="kr.or.ddit.member.vo.MemberVO" id="memMap"> -->
<!-- 		<result property="memId" column="MEM_ID"/> -->
<!-- 		<result property="memName" column="MEM_NAME"/> -->
<!-- 		<result property="memPass" column="MEM_PASS"/> -->
<!-- 		<result property="memNickname" column="MEM_NICKNAME"/> -->
<!-- 		<result property="memGender" column="MEM_GENDER"/> -->
<!-- 		<result property="memBir" column="MEM_BIR"/> -->
<!-- 		<result property="memZip" column="MEM_ZIP"/> -->
<!-- 		<result property="memAdd1" column="MEM_ADD1"/> -->
<!-- 		<result property="memAdd2" column="MEM_ADD2"/> -->
<!-- 		<result property="memHp" column="MEM_HP"/> -->
<!-- 		<result property="memMail" column="MEM_MAIL"/> -->
<!-- 		<result property="memCyberMoney" column="MEM_CYBERMONEY"/> -->
<!-- 		<result property="atchFileId" column="ATCH_FILE_ID"/> -->
<!-- 	</resultMap> -->
	
	<select id="getMemberAll" resultClass="kr.or.ddit.member.vo.MemberVO">
		SELECT
		MEM_ID				 memId
		,MEM_PASS 			 memPass
		,MEM_NAME 			memName
		,MEM_NICKNAME 		memNickname
		,MEM_GENDER 		memGender
		,MEM_BIR 			memBir
		,MEM_ZIP 			memZip
		,MEM_ADD1 			memAdd1
		,MEM_ADD2 			memAdd2
		,MEM_HP 			memHp
		,MEM_MAIL 			memMail
		,MEM_CYBERMONEY 	memCyberMoney
		 FROM MEMBER
	</select>
	
	<select id="getMember" parameterClass="String" resultClass="int">
		SELECT COUNT(*) AS CNT 
		FROM MYMEMBER WHERE MEM_ID = #memId#
	</select>
	
	<select id="getSearchMember" parameterClass="memVO" resultMap="memMap">
	 select
		MEM_ID				 memId
		,MEM_PASS 			 memPass
		,MEM_NAME 			memName
		,MEM_NICKNAME 		memNickname
		,MEM_GENDER 		memGender
		,MEM_BIR 			memBir
		,MEM_ZIP 			memZip
		,MEM_ADD1 			memAdd1
		,MEM_ADD2 			memAdd2
		,MEM_HP 			memHp
		,MEM_MAIL 			memMail
		,MEM_CYBERMONEY 	memCyberMoney
		 FROM MEMBER
	 where 1=1
	 <isNotEmpty property="memId">
           AND MEM_ID = #memId#
	 </isNotEmpty>
	 <isNotEmpty property="memName">
           AND MEM_NAME = #memName#
	 </isNotEmpty>
	 <isNotEmpty property="memTel">
           and MEM_NICKNAME = #memTel#
	 </isNotEmpty>
	</select>

</sqlMap>			





